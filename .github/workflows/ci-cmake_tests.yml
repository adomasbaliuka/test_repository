# Run Google Tests (via CTest) using "GitHub Actions" CI
# Adapted from the default template, as well as https://github.com/GHF/googletest-ci (CC license)

name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BUILD_TYPE: RelWithDebInfo
  
defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Configure CMake
        run: cmake -S $GITHUB_WORKSPACE -B ${{runner.workspace}}/build -DCMAKE_BUILD_TYPE:STRING=$BUILD_TYPE -DENABLE_COVERAGE:BOOL=ON

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config $BUILD_TYPE
        
      - name: Test and generate code coverage
        working-directory: ${{runner.workspace}}/build
        run: |
          set -x  # enable debugging in bash
          sudo apt-get -qq -y install lcov gcovr
          lcov --zerocounters --directory .
          ctest -C $BUILD_TYPE
          gcovr --root ../ --xml-pretty --xml coverage.xml

      - name: print tree for testing CI
        working-directory: ${{runner.workspace}}/build
        run: tree

      - name: Publish to codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./build/coverage.xml
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          path: coverage.xml
